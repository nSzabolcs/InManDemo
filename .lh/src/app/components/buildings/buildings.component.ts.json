{
    "sourceFile": "src/app/components/buildings/buildings.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1753093736567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753363284914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,137 @@\n+import { Component, inject, OnInit, ViewChild } from '@angular/core';\n+import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n+import { MatTableModule } from '@angular/material/table';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { MatInputModule } from '@angular/material/input';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatIconModule } from '@angular/material/icon';\n+import { CommonModule } from '@angular/common';\n+import { ApiService } from '../../services/api.service';\n+import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n+import { ConfirmdialogComponent } from '../confirmdialog/confirmdialog.component';\n+import { FormsModule } from '@angular/forms';\n+import { MatSnackBar } from '@angular/material/snack-bar';\n+import { RouterModule } from '@angular/router';\n+\n+\n+@Component({\n+  selector: 'app-buildings',\n+  standalone: true,\n+  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule],\n+  templateUrl: './buildings.component.html',\n+  styleUrl: './buildings.component.scss'\n+})\n+\n+export class BuildingsComponent implements OnInit {\n+  readonly dialog = inject(MatDialog);\n+  readonly snackBar = inject(MatSnackBar);\n+  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+\n+  displayedColumns: string[] = ['id', 'name', 'address', 'levels', 'details', 'actions'];\n+  dataSource: any[] = [];\n+\n+  buildings: any[] = [];\n+\n+buildingForm = {\n+  id: null,\n+  name: '',\n+  address: '',\n+  levels: null\n+};\n+\n+\n+\n+  constructor(\n+    private api: ApiService\n+  ) { }\n+\n+  ngOnInit(): void {\n+    this.loadData();\n+  }\n+\n+save() {\n+  const { id, name, address, levels } = this.buildingForm;\n+\n+  if (!name || !address || !levels) {\n+    this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n+    return;\n+  }\n+\n+  if (id) {\n+    // MÓDOSÍTÁS\n+    this.api.update('buildings', id, { name, address, levels }).subscribe({\n+      next: () => {\n+        this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n+        this.loadData();\n+        this.resetForm();\n+      },\n+      error: err => {\n+        this.snackBar.open('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n+      }\n+    });\n+  } else {\n+    // ÚJ LÉTREHOZÁS\n+    this.api.insert('buildings', { name, address, levels }).subscribe({\n+      next: () => {\n+        this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n+        this.loadData();\n+        this.resetForm();\n+      },\n+      error: err => {\n+        this.snackBar.open('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n+      }\n+    });\n+  }\n+}\n+\n+\n+\n+onEdit(row: any): void {\n+  this.buildingForm = {\n+    id: row.id,\n+    name: row.name,\n+    address: row.address,\n+    levels: row.levels\n+  };\n+\n+  this.panel.open();\n+}\n+\n+\n+  onDelete(row: any): void {\n+    const dialogRef = this.dialog.open(ConfirmdialogComponent, {});\n+\n+    dialogRef.afterClosed().subscribe(result => {\n+      if (result === true) {\n+        // Igen-t nyomott a felhasználó\n+        this.api.delete('buildings', row.id).subscribe(() => {\n+          // újra töltheted a táblázatot pl.\n+            this.loadData();\n+        });\n+      } else {\n+        // Nem vagy bezárta\n+        console.log('Törlés megszakítva');\n+      }\n+    });\n+  }\n+\n+  loadData() {\n+    this.api.selectAll('buildings').subscribe({\n+      next: (res) => {\n+        this.buildings = res as any[];\n+        this.dataSource = this.buildings;\n+      }\n+    });\n+  }\n+\n+  resetForm(): void {\n+  this.buildingForm = {\n+    id: null,\n+    name: '',\n+    address: '',\n+    levels: null\n+  };\n+}\n+\n+\n+}\n"
                },
                {
                    "date": 1753363312006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,138 @@\n+import { Component, inject, OnInit, ViewChild } from '@angular/core';\n+import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n+import { MatTableModule } from '@angular/material/table';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { MatInputModule } from '@angular/material/input';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatIconModule } from '@angular/material/icon';\n+import { CommonModule } from '@angular/common';\n+import { ApiService } from '../../services/api.service';\n+import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n+import { ConfirmdialogComponent } from '../confirmdialog/confirmdialog.component';\n+import { FormsModule } from '@angular/forms';\n+import { MatSnackBar } from '@angular/material/snack-bar';\n+import { RouterModule } from '@angular/router';\n+ import {MatProgressBarModule} from '@angular/material/progress-bar'; \n+\n+\n+@Component({\n+  selector: 'app-buildings',\n+  standalone: true,\n+  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n+  templateUrl: './buildings.component.html',\n+  styleUrl: './buildings.component.scss'\n+})\n+\n+export class BuildingsComponent implements OnInit {\n+  readonly dialog = inject(MatDialog);\n+  readonly snackBar = inject(MatSnackBar);\n+  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+\n+  displayedColumns: string[] = ['id', 'name', 'address', 'levels', 'details', 'actions'];\n+  dataSource: any[] = [];\n+\n+  buildings: any[] = [];\n+\n+buildingForm = {\n+  id: null,\n+  name: '',\n+  address: '',\n+  levels: null\n+};\n+\n+\n+\n+  constructor(\n+    private api: ApiService\n+  ) { }\n+\n+  ngOnInit(): void {\n+    this.loadData();\n+  }\n+\n+save() {\n+  const { id, name, address, levels } = this.buildingForm;\n+\n+  if (!name || !address || !levels) {\n+    this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n+    return;\n+  }\n+\n+  if (id) {\n+    // MÓDOSÍTÁS\n+    this.api.update('buildings', id, { name, address, levels }).subscribe({\n+      next: () => {\n+        this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n+        this.loadData();\n+        this.resetForm();\n+      },\n+      error: err => {\n+        this.snackBar.open('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n+      }\n+    });\n+  } else {\n+    // ÚJ LÉTREHOZÁS\n+    this.api.insert('buildings', { name, address, levels }).subscribe({\n+      next: () => {\n+        this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n+        this.loadData();\n+        this.resetForm();\n+      },\n+      error: err => {\n+        this.snackBar.open('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n+      }\n+    });\n+  }\n+}\n+\n+\n+\n+onEdit(row: any): void {\n+  this.buildingForm = {\n+    id: row.id,\n+    name: row.name,\n+    address: row.address,\n+    levels: row.levels\n+  };\n+\n+  this.panel.open();\n+}\n+\n+\n+  onDelete(row: any): void {\n+    const dialogRef = this.dialog.open(ConfirmdialogComponent, {});\n+\n+    dialogRef.afterClosed().subscribe(result => {\n+      if (result === true) {\n+        // Igen-t nyomott a felhasználó\n+        this.api.delete('buildings', row.id).subscribe(() => {\n+          // újra töltheted a táblázatot pl.\n+            this.loadData();\n+        });\n+      } else {\n+        // Nem vagy bezárta\n+        console.log('Törlés megszakítva');\n+      }\n+    });\n+  }\n+\n+  loadData() {\n+    this.api.selectAll('buildings').subscribe({\n+      next: (res) => {\n+        this.buildings = res as any[];\n+        this.dataSource = this.buildings;\n+      }\n+    });\n+  }\n+\n+  resetForm(): void {\n+  this.buildingForm = {\n+    id: null,\n+    name: '',\n+    address: '',\n+    levels: null\n+  };\n+}\n+\n+\n+}\n"
                },
                {
                    "date": 1753363456563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,145 +119,15 @@\n   loadData() {\n     this.api.selectAll('buildings').subscribe({\n       next: (res) => {\n         this.buildings = res as any[];\n-        this.dataSource = this.buildings;\n-      }\n-    });\n-  }\n \n-  resetForm(): void {\n-  this.buildingForm = {\n-    id: null,\n-    name: '',\n-    address: '',\n-    levels: null\n-  };\n-}\n+          this.buildings = (res as any[])\n+      .map(building => ({\n+        ...building,\n+        occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+      }));\n \n-\n-}\n-import { Component, inject, OnInit, ViewChild } from '@angular/core';\n-import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n-import { MatTableModule } from '@angular/material/table';\n-import { MatFormFieldModule } from '@angular/material/form-field';\n-import { MatInputModule } from '@angular/material/input';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatIconModule } from '@angular/material/icon';\n-import { CommonModule } from '@angular/common';\n-import { ApiService } from '../../services/api.service';\n-import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n-import { ConfirmdialogComponent } from '../confirmdialog/confirmdialog.component';\n-import { FormsModule } from '@angular/forms';\n-import { MatSnackBar } from '@angular/material/snack-bar';\n-import { RouterModule } from '@angular/router';\n-\n-\n-@Component({\n-  selector: 'app-buildings',\n-  standalone: true,\n-  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule],\n-  templateUrl: './buildings.component.html',\n-  styleUrl: './buildings.component.scss'\n-})\n-\n-export class BuildingsComponent implements OnInit {\n-  readonly dialog = inject(MatDialog);\n-  readonly snackBar = inject(MatSnackBar);\n-  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n-\n-  displayedColumns: string[] = ['id', 'name', 'address', 'levels', 'details', 'actions'];\n-  dataSource: any[] = [];\n-\n-  buildings: any[] = [];\n-\n-buildingForm = {\n-  id: null,\n-  name: '',\n-  address: '',\n-  levels: null\n-};\n-\n-\n-\n-  constructor(\n-    private api: ApiService\n-  ) { }\n-\n-  ngOnInit(): void {\n-    this.loadData();\n-  }\n-\n-save() {\n-  const { id, name, address, levels } = this.buildingForm;\n-\n-  if (!name || !address || !levels) {\n-    this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n-    return;\n-  }\n-\n-  if (id) {\n-    // MÓDOSÍTÁS\n-    this.api.update('buildings', id, { name, address, levels }).subscribe({\n-      next: () => {\n-        this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n-        this.loadData();\n-        this.resetForm();\n-      },\n-      error: err => {\n-        this.snackBar.open('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n-      }\n-    });\n-  } else {\n-    // ÚJ LÉTREHOZÁS\n-    this.api.insert('buildings', { name, address, levels }).subscribe({\n-      next: () => {\n-        this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n-        this.loadData();\n-        this.resetForm();\n-      },\n-      error: err => {\n-        this.snackBar.open('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n-      }\n-    });\n-  }\n-}\n-\n-\n-\n-onEdit(row: any): void {\n-  this.buildingForm = {\n-    id: row.id,\n-    name: row.name,\n-    address: row.address,\n-    levels: row.levels\n-  };\n-\n-  this.panel.open();\n-}\n-\n-\n-  onDelete(row: any): void {\n-    const dialogRef = this.dialog.open(ConfirmdialogComponent, {});\n-\n-    dialogRef.afterClosed().subscribe(result => {\n-      if (result === true) {\n-        // Igen-t nyomott a felhasználó\n-        this.api.delete('buildings', row.id).subscribe(() => {\n-          // újra töltheted a táblázatot pl.\n-            this.loadData();\n-        });\n-      } else {\n-        // Nem vagy bezárta\n-        console.log('Törlés megszakítva');\n-      }\n-    });\n-  }\n-\n-  loadData() {\n-    this.api.selectAll('buildings').subscribe({\n-      next: (res) => {\n-        this.buildings = res as any[];\n         this.dataSource = this.buildings;\n       }\n     });\n   }\n@@ -272,141 +142,4 @@\n }\n \n \n }\n-import { Component, inject, OnInit, ViewChild } from '@angular/core';\n-import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n-import { MatTableModule } from '@angular/material/table';\n-import { MatFormFieldModule } from '@angular/material/form-field';\n-import { MatInputModule } from '@angular/material/input';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatIconModule } from '@angular/material/icon';\n-import { CommonModule } from '@angular/common';\n-import { ApiService } from '../../services/api.service';\n-import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n-import { ConfirmdialogComponent } from '../confirmdialog/confirmdialog.component';\n-import { FormsModule } from '@angular/forms';\n-import { MatSnackBar } from '@angular/material/snack-bar';\n-import { RouterModule } from '@angular/router';\n-\n-\n-@Component({\n-  selector: 'app-buildings',\n-  standalone: true,\n-  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule],\n-  templateUrl: './buildings.component.html',\n-  styleUrl: './buildings.component.scss'\n-})\n-\n-export class BuildingsComponent implements OnInit {\n-  readonly dialog = inject(MatDialog);\n-  readonly snackBar = inject(MatSnackBar);\n-  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n-\n-  displayedColumns: string[] = ['id', 'name', 'address', 'levels', 'actions'];\n-  dataSource: any[] = [];\n-\n-  buildings: any[] = [];\n-\n-buildingForm = {\n-  id: null,\n-  name: '',\n-  address: '',\n-  levels: null\n-};\n-\n-\n-\n-  constructor(\n-    private api: ApiService\n-  ) { }\n-\n-  ngOnInit(): void {\n-    this.loadData();\n-  }\n-\n-save() {\n-  const { id, name, address, levels } = this.buildingForm;\n-\n-  if (!name || !address || !levels) {\n-    this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n-    return;\n-  }\n-\n-  if (id) {\n-    // MÓDOSÍTÁS\n-    this.api.update('buildings', id, { name, address, levels }).subscribe({\n-      next: () => {\n-        this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n-        this.loadData();\n-        this.resetForm();\n-      },\n-      error: err => {\n-        this.snackBar.open('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n-      }\n-    });\n-  } else {\n-    // ÚJ LÉTREHOZÁS\n-    this.api.insert('buildings', { name, address, levels }).subscribe({\n-      next: () => {\n-        this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n-        this.loadData();\n-        this.resetForm();\n-      },\n-      error: err => {\n-        this.snackBar.open('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n-      }\n-    });\n-  }\n-}\n-\n-\n-\n-onEdit(row: any): void {\n-  this.buildingForm = {\n-    id: row.id,\n-    name: row.name,\n-    address: row.address,\n-    levels: row.levels\n-  };\n-\n-  this.panel.open();\n-}\n-\n-\n-  onDelete(row: any): void {\n-    const dialogRef = this.dialog.open(ConfirmdialogComponent, {});\n-\n-    dialogRef.afterClosed().subscribe(result => {\n-      if (result === true) {\n-        // Igen-t nyomott a felhasználó\n-        this.api.delete('buildings', row.id).subscribe(() => {\n-          // újra töltheted a táblázatot pl.\n-            this.loadData();\n-        });\n-      } else {\n-        // Nem vagy bezárta\n-        console.log('Törlés megszakítva');\n-      }\n-    });\n-  }\n-\n-  loadData() {\n-    this.api.selectAll('buildings').subscribe({\n-      next: (res) => {\n-        this.buildings = res as any[];\n-        this.dataSource = this.buildings;\n-      }\n-    });\n-  }\n-\n-  resetForm(): void {\n-  this.buildingForm = {\n-    id: null,\n-    name: '',\n-    address: '',\n-    levels: null\n-  };\n-}\n-\n-\n-}\n"
                },
                {
                    "date": 1753365928998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,10 @@\n buildingForm = {\n   id: null,\n   name: '',\n   address: '',\n-  levels: null\n+  levels: null,\n+   preview: null\n };\n \n \n \n"
                },
                {
                    "date": 1753365938090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,23 @@\n   constructor(\n     private api: ApiService\n   ) { }\n \n+  onFileSelected(event: Event): void {\n+  const input = event.target as HTMLInputElement;\n+\n+  if (input.files && input.files.length > 0) {\n+    const file = input.files[0];\n+    const reader = new FileReader();\n+\n+    reader.onload = () => {\n+      this.buildingForm.preview = reader.result as string;\n+    };\n+\n+    reader.readAsDataURL(file); // base64 formátum\n+  }\n+}\n+\n   ngOnInit(): void {\n     this.loadData();\n   }\n \n"
                },
                {
                    "date": 1753365967631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n   id: null,\n   name: '',\n   address: '',\n   levels: null,\n-   preview: null\n+  preview: ''\n };\n \n \n \n"
                },
                {
                    "date": 1753366009259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,10 @@\n   this.buildingForm = {\n     id: row.id,\n     name: row.name,\n     address: row.address,\n-    levels: row.levels\n+    levels: row.levels,\n+    preview: row.preview\n   };\n \n   this.panel.open();\n }\n"
                },
                {
                    "date": 1753366019877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,10 @@\n   this.buildingForm = {\n     id: null,\n     name: '',\n     address: '',\n-    levels: null\n+    levels: null,\n+    preview: ''\n   };\n }\n \n \n"
                },
                {
                    "date": 1753366181964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   constructor(\n     private api: ApiService\n   ) { }\n \n-  onFileSelected(event: Event): void {\n+onFileSelected(event: Event): void {\n   const input = event.target as HTMLInputElement;\n \n   if (input.files && input.files.length > 0) {\n     const file = input.files[0];\n@@ -57,12 +57,13 @@\n     reader.onload = () => {\n       this.buildingForm.preview = reader.result as string;\n     };\n \n-    reader.readAsDataURL(file); // base64 formátum\n+    reader.readAsDataURL(file); // base64-re olvassa be\n   }\n }\n \n+\n   ngOnInit(): void {\n     this.loadData();\n   }\n \n"
                },
                {
                    "date": 1753366303017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,18 +67,20 @@\n     this.loadData();\n   }\n \n save() {\n-  const { id, name, address, levels } = this.buildingForm;\n+  const { id, name, address, levels, preview } = this.buildingForm;\n \n   if (!name || !address || !levels) {\n     this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n     return;\n   }\n \n+  const payload = { name, address, levels, preview };\n+\n   if (id) {\n     // MÓDOSÍTÁS\n-    this.api.update('buildings', id, { name, address, levels }).subscribe({\n+    this.api.update('buildings', id, payload).subscribe({\n       next: () => {\n         this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n         this.loadData();\n         this.resetForm();\n@@ -88,9 +90,9 @@\n       }\n     });\n   } else {\n     // ÚJ LÉTREHOZÁS\n-    this.api.insert('buildings', { name, address, levels }).subscribe({\n+    this.api.insert('buildings', payload).subscribe({\n       next: () => {\n         this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n         this.loadData();\n         this.resetForm();\n@@ -103,8 +105,9 @@\n }\n \n \n \n+\n onEdit(row: any): void {\n   this.buildingForm = {\n     id: row.id,\n     name: row.name,\n"
                },
                {
                    "date": 1753366509434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   readonly dialog = inject(MatDialog);\n   readonly snackBar = inject(MatSnackBar);\n   @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n \n-  displayedColumns: string[] = ['id', 'name', 'address', 'levels', 'details', 'actions'];\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'address', 'levels', 'details', 'actions'];\n   dataSource: any[] = [];\n \n   buildings: any[] = [];\n \n"
                },
                {
                    "date": 1753366552262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,6 +162,11 @@\n     preview: ''\n   };\n }\n \n-\n+openImageDialog(image: string): void {\n+  this.dialog.open(ImagemodalComponent, {\n+    data: { image },\n+    panelClass: 'fullscreen-dialog'\n+  });\n }\n+}\n"
                },
                {
                    "date": 1753428727865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { ConfirmdialogComponent } from '../confirmdialog/confirmdialog.component';\n import { FormsModule } from '@angular/forms';\n import { MatSnackBar } from '@angular/material/snack-bar';\n import { RouterModule } from '@angular/router';\n- import {MatProgressBarModule} from '@angular/material/progress-bar'; \n+import { MatProgressBarModule } from '@angular/material/progress-bar';\n import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n \n \n @Component({\n@@ -33,93 +33,93 @@\n   dataSource: any[] = [];\n \n   buildings: any[] = [];\n \n-buildingForm = {\n-  id: null,\n-  name: '',\n-  address: '',\n-  levels: null,\n-  preview: ''\n-};\n+  buildingForm = {\n+    id: null,\n+    name: '',\n+    address: '',\n+    levels: null,\n+    preview: ''\n+  };\n \n \n \n   constructor(\n     private api: ApiService\n   ) { }\n \n-onFileSelected(event: Event): void {\n-  const input = event.target as HTMLInputElement;\n+  onFileSelected(event: Event): void {\n+    const input = event.target as HTMLInputElement;\n \n-  if (input.files && input.files.length > 0) {\n-    const file = input.files[0];\n-    const reader = new FileReader();\n+    if (input.files && input.files.length > 0) {\n+      const file = input.files[0];\n+      const reader = new FileReader();\n \n-    reader.onload = () => {\n-      this.buildingForm.preview = reader.result as string;\n-    };\n+      reader.onload = () => {\n+        this.buildingForm.preview = reader.result as string;\n+      };\n \n-    reader.readAsDataURL(file); // base64-re olvassa be\n+      reader.readAsDataURL(file); // base64-re olvassa be\n+    }\n   }\n-}\n \n \n   ngOnInit(): void {\n     this.loadData();\n   }\n \n-save() {\n-  const { id, name, address, levels, preview } = this.buildingForm;\n+  save() {\n+    const { id, name, address, levels, preview } = this.buildingForm;\n \n-  if (!name || !address || !levels) {\n-    this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n-    return;\n-  }\n+    if (!name || !address || !levels) {\n+      this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n+      return;\n+    }\n \n-  const payload = { name, address, levels, preview };\n+    const payload = { name, address, levels, preview };\n \n-  if (id) {\n-    // MÓDOSÍTÁS\n-    this.api.update('buildings', id, payload).subscribe({\n-      next: () => {\n-        this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n-        this.loadData();\n-        this.resetForm();\n-      },\n-      error: err => {\n-        this.snackBar.open('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n-      }\n-    });\n-  } else {\n-    // ÚJ LÉTREHOZÁS\n-    this.api.insert('buildings', payload).subscribe({\n-      next: () => {\n-        this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n-        this.loadData();\n-        this.resetForm();\n-      },\n-      error: err => {\n-        this.snackBar.open('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n-      }\n-    });\n+    if (id) {\n+      // MÓDOSÍTÁS\n+      this.api.update('buildings', id, payload).subscribe({\n+        next: () => {\n+          this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n+          this.loadData();\n+          this.resetForm();\n+        },\n+        error: err => {\n+          this.snackBar.open('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n+        }\n+      });\n+    } else {\n+      // ÚJ LÉTREHOZÁS\n+      this.api.insert('buildings', payload).subscribe({\n+        next: () => {\n+          this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n+          this.loadData();\n+          this.resetForm();\n+        },\n+        error: err => {\n+          this.snackBar.open('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n+        }\n+      });\n+    }\n   }\n-}\n \n \n \n \n-onEdit(row: any): void {\n-  this.buildingForm = {\n-    id: row.id,\n-    name: row.name,\n-    address: row.address,\n-    levels: row.levels,\n-    preview: row.preview\n-  };\n+  onEdit(row: any): void {\n+    this.buildingForm = {\n+      id: row.id,\n+      name: row.name,\n+      address: row.address,\n+      levels: row.levels,\n+      preview: row.preview\n+    };\n \n-  this.panel.open();\n-}\n+    this.panel.open();\n+  }\n \n \n   onDelete(row: any): void {\n     const dialogRef = this.dialog.open(ConfirmdialogComponent, {});\n@@ -128,9 +128,9 @@\n       if (result === true) {\n         // Igen-t nyomott a felhasználó\n         this.api.delete('buildings', row.id).subscribe(() => {\n           // újra töltheted a táblázatot pl.\n-            this.loadData();\n+          this.loadData();\n         });\n       } else {\n         // Nem vagy bezárta\n         console.log('Törlés megszakítva');\n@@ -142,32 +142,32 @@\n     this.api.selectAll('buildings').subscribe({\n       next: (res) => {\n         this.buildings = res as any[];\n \n-          this.buildings = (res as any[])\n-      .map(building => ({\n-        ...building,\n-        occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n-      }));\n+        this.buildings = (res as any[])\n+          .map(building => ({\n+            ...building,\n+            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+          }));\n \n         this.dataSource = this.buildings;\n       }\n     });\n   }\n \n   resetForm(): void {\n-  this.buildingForm = {\n-    id: null,\n-    name: '',\n-    address: '',\n-    levels: null,\n-    preview: ''\n-  };\n-}\n+    this.buildingForm = {\n+      id: null,\n+      name: '',\n+      address: '',\n+      levels: null,\n+      preview: ''\n+    };\n+  }\n \n-openImageDialog(image: string): void {\n-  this.dialog.open(ImagemodalComponent, {\n-    data: { image },\n-    panelClass: 'fullscreen-dialog'\n-  });\n+  openImageDialog(image: string): void {\n+    this.dialog.open(ImagemodalComponent, {\n+      data: { image },\n+      panelClass: 'fullscreen-dialog'\n+    });\n+  }\n }\n-}\n"
                },
                {
                    "date": 1753428874826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,171 @@\n+import { Component, inject, OnInit, ViewChild } from '@angular/core';\n+import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n+import { MatTableModule } from '@angular/material/table';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { MatInputModule } from '@angular/material/input';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatIconModule } from '@angular/material/icon';\n+import { CommonModule } from '@angular/common';\n+import { ApiService } from '../../services/api.service';\n+import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n+import { ConfirmdialogComponent } from '../confirmdialog/confirmdialog.component';\n+import { FormsModule } from '@angular/forms';\n+import { MatSnackBar } from '@angular/material/snack-bar';\n+import { RouterModule } from '@angular/router';\n+import { MatProgressBarModule } from '@angular/material/progress-bar';\n+import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n+\n+\n+@Component({\n+  selector: 'app-buildings',\n+  standalone: true,\n+  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n+  templateUrl: './buildings.component.html',\n+  styleUrl: './buildings.component.scss'\n+})\n+\n+export class BuildingsComponent implements OnInit {\n+  readonly dialog = inject(MatDialog);\n+  readonly snackBar = inject(MatSnackBar);\n+  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'address', 'levels', 'details', 'actions'];\n+  dataSource: any[] = [];\n+\n+  buildings: any[] = [];\n+\n+  buildingForm = {\n+    id: null,\n+    name: '',\n+    address: '',\n+    preview: ''\n+  };\n+\n+\n+\n+  constructor(\n+    private api: ApiService\n+  ) { }\n+\n+  onFileSelected(event: Event): void {\n+    const input = event.target as HTMLInputElement;\n+\n+    if (input.files && input.files.length > 0) {\n+      const file = input.files[0];\n+      const reader = new FileReader();\n+\n+      reader.onload = () => {\n+        this.buildingForm.preview = reader.result as string;\n+      };\n+\n+      reader.readAsDataURL(file); // base64-re olvassa be\n+    }\n+  }\n+\n+\n+  ngOnInit(): void {\n+    this.loadData();\n+  }\n+\n+  save() {\n+    const { id, name, address, preview } = this.buildingForm;\n+\n+    if (!name || !address ) {\n+      this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n+      return;\n+    }\n+\n+    const payload = { name, address, preview };\n+\n+    if (id) {\n+      // MÓDOSÍTÁS\n+      this.api.update('buildings', id, payload).subscribe({\n+        next: () => {\n+          this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n+          this.loadData();\n+          this.resetForm();\n+        },\n+        error: err => {\n+          this.snackBar.open('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n+        }\n+      });\n+    } else {\n+      // ÚJ LÉTREHOZÁS\n+      this.api.insert('buildings', payload).subscribe({\n+        next: () => {\n+          this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n+          this.loadData();\n+          this.resetForm();\n+        },\n+        error: err => {\n+          this.snackBar.open('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n+        }\n+      });\n+    }\n+  }\n+\n+\n+\n+\n+  onEdit(row: any): void {\n+    this.buildingForm = {\n+      id: row.id,\n+      name: row.name,\n+      address: row.address,\n+      preview: row.preview\n+    };\n+\n+    this.panel.open();\n+  }\n+\n+\n+  onDelete(row: any): void {\n+    const dialogRef = this.dialog.open(ConfirmdialogComponent, {});\n+\n+    dialogRef.afterClosed().subscribe(result => {\n+      if (result === true) {\n+        // Igen-t nyomott a felhasználó\n+        this.api.delete('buildings', row.id).subscribe(() => {\n+          // újra töltheted a táblázatot pl.\n+          this.loadData();\n+        });\n+      } else {\n+        // Nem vagy bezárta\n+        console.log('Törlés megszakítva');\n+      }\n+    });\n+  }\n+\n+  loadData() {\n+    this.api.selectAll('buildings_vt').subscribe({\n+      next: (res) => {\n+        this.buildings = res as any[];\n+\n+        this.buildings = (res as any[])\n+          .map(building => ({\n+            ...building,\n+            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+          }));\n+\n+        this.dataSource = this.buildings;\n+      }\n+    });\n+  }\n+\n+  resetForm(): void {\n+    this.buildingForm = {\n+      id: null,\n+      name: '',\n+      address: '',\n+      preview: ''\n+    };\n+  }\n+\n+  openImageDialog(image: string): void {\n+    this.dialog.open(ImagemodalComponent, {\n+      data: { image },\n+      panelClass: 'fullscreen-dialog'\n+    });\n+  }\n+\n+}\n"
                }
            ],
            "date": 1753093736567,
            "name": "Commit-0",
            "content": "import { Component, inject, OnInit, ViewChild } from '@angular/core';\nimport { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { ApiService } from '../../services/api.service';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { ConfirmdialogComponent } from '../confirmdialog/confirmdialog.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RouterModule } from '@angular/router';\n\n\n@Component({\n  selector: 'app-buildings',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule],\n  templateUrl: './buildings.component.html',\n  styleUrl: './buildings.component.scss'\n})\n\nexport class BuildingsComponent implements OnInit {\n  readonly dialog = inject(MatDialog);\n  readonly snackBar = inject(MatSnackBar);\n  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n\n  displayedColumns: string[] = ['id', 'name', 'address', 'levels', 'actions'];\n  dataSource: any[] = [];\n\n  buildings: any[] = [];\n\nbuildingForm = {\n  id: null,\n  name: '',\n  address: '',\n  levels: null\n};\n\n\n\n  constructor(\n    private api: ApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\nsave() {\n  const { id, name, address, levels } = this.buildingForm;\n\n  if (!name || !address || !levels) {\n    this.snackBar.open('Minden mező kitöltése kötelező!', 'OK', { duration: 3000 });\n    return;\n  }\n\n  if (id) {\n    // MÓDOSÍTÁS\n    this.api.update('buildings', id, { name, address, levels }).subscribe({\n      next: () => {\n        this.snackBar.open('Sikeres módosítás!', 'OK', { duration: 3000 });\n        this.loadData();\n        this.resetForm();\n      },\n      error: err => {\n        this.snackBar.open('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n      }\n    });\n  } else {\n    // ÚJ LÉTREHOZÁS\n    this.api.insert('buildings', { name, address, levels }).subscribe({\n      next: () => {\n        this.snackBar.open('Sikeres mentés!', 'OK', { duration: 3000 });\n        this.loadData();\n        this.resetForm();\n      },\n      error: err => {\n        this.snackBar.open('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'Bezár', { duration: 5000 });\n      }\n    });\n  }\n}\n\n\n\nonEdit(row: any): void {\n  this.buildingForm = {\n    id: row.id,\n    name: row.name,\n    address: row.address,\n    levels: row.levels\n  };\n\n  this.panel.open();\n}\n\n\n  onDelete(row: any): void {\n    const dialogRef = this.dialog.open(ConfirmdialogComponent, {});\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        // Igen-t nyomott a felhasználó\n        this.api.delete('buildings', row.id).subscribe(() => {\n          // újra töltheted a táblázatot pl.\n            this.loadData();\n        });\n      } else {\n        // Nem vagy bezárta\n        console.log('Törlés megszakítva');\n      }\n    });\n  }\n\n  loadData() {\n    this.api.selectAll('buildings').subscribe({\n      next: (res) => {\n        this.buildings = res as any[];\n        this.dataSource = this.buildings;\n      }\n    });\n  }\n\n  resetForm(): void {\n  this.buildingForm = {\n    id: null,\n    name: '',\n    address: '',\n    levels: null\n  };\n}\n\n\n}\n"
        }
    ]
}