{
    "sourceFile": "src/app/components/levels/levels.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 32,
            "patches": [
                {
                    "date": 1753272593700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753272683105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,10 @@\n \n loadLevels() {\n   this.api.selectAll('levels').subscribe({\n     next: (res) => {\n+      console.log(res)\n+      console.log(this.buildingId)\n       this.levels = (res as any[]).filter(l => l.building_id === this.buildingId);\n       console.log(this.levels)\n       this.dataSource = this.levels;\n     },\n"
                },
                {
                    "date": 1753272695944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n loadLevels() {\n   this.api.selectAll('levels').subscribe({\n     next: (res) => {\n       console.log(res)\n-      console.log(this.buildingId)\n+      console.log('id: ' + this.buildingId)\n       this.levels = (res as any[]).filter(l => l.building_id === this.buildingId);\n       console.log(this.levels)\n       this.dataSource = this.levels;\n     },\n"
                },
                {
                    "date": 1753272768481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n   this.api.selectAll('levels').subscribe({\n     next: (res) => {\n       console.log(res)\n       console.log('id: ' + this.buildingId)\n-      this.levels = (res as any[]).filter(l => l.building_id === this.buildingId);\n+      this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n       console.log(this.levels)\n       this.dataSource = this.levels;\n     },\n     error: (err) => console.error('Szintek lekérdezési hiba:', err)\n"
                },
                {
                    "date": 1753275278739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,12 +60,9 @@\n \n loadLevels() {\n   this.api.selectAll('levels').subscribe({\n     next: (res) => {\n-      console.log(res)\n-      console.log('id: ' + this.buildingId)\n       this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n-      console.log(this.levels)\n       this.dataSource = this.levels;\n     },\n     error: (err) => console.error('Szintek lekérdezési hiba:', err)\n   });\n"
                },
                {
                    "date": 1753357599733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n export class LevelsComponent implements OnInit {\n     @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n \n   readonly route = inject(ActivatedRoute);\n-  displayedColumns: string[] = ['id', 'name', 'actions'];\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'actions'];\n   dataSource: any[] = [];\n   constructor(\n     private api: ApiService\n   ) { }\n"
                },
                {
                    "date": 1753359667666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,5 +126,10 @@\n     floorplan: null\n   };\n }\n \n+openImageDialog(image: string): void {\n+  this.dialog.open(ImageDialogComponent, {\n+    data: { image },\n+    panelClass: 'fullscreen-dialog'\n+  });\n }\n"
                },
                {
                    "date": 1753359709293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,11 @@\n import { MatTableModule } from '@angular/material/table';\n import { MatFormFieldModule } from '@angular/material/form-field';\n import { FormsModule } from '@angular/forms';\n import { CommonModule } from '@angular/common';\n-import { MatDialogModule } from '@angular/material/dialog';\n+import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n import { MatInputModule } from '@angular/material/input';\n+import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n \n @Component({\n   selector: 'app-levels',\n   standalone: true,\n@@ -25,9 +26,10 @@\n   readonly route = inject(ActivatedRoute);\n   displayedColumns: string[] = ['id', 'preview', 'name', 'actions'];\n   dataSource: any[] = [];\n   constructor(\n-    private api: ApiService\n+    private api: ApiService,\n+    private dialog: MatDialog\n   ) { }\n \n   buildingId!: number;\n   building: any = '';\n@@ -127,9 +129,9 @@\n   };\n }\n \n openImageDialog(image: string): void {\n-  this.dialog.open(ImageDialogComponent, {\n+  this.dialog.open(ImagemodalComponent, {\n     data: { image },\n     panelClass: 'fullscreen-dialog'\n   });\n }\n"
                },
                {
                    "date": 1753359716641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,4 +134,6 @@\n     data: { image },\n     panelClass: 'fullscreen-dialog'\n   });\n }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753362430876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n export class LevelsComponent implements OnInit {\n     @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n \n   readonly route = inject(ActivatedRoute);\n-  displayedColumns: string[] = ['id', 'preview', 'name', 'actions'];\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'details', 'actions'];\n   dataSource: any[] = [];\n   constructor(\n     private api: ApiService,\n     private dialog: MatDialog\n"
                },
                {
                    "date": 1753362475400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,140 @@\n+import { Component, inject, OnInit, ViewChild } from '@angular/core';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatIconModule } from '@angular/material/icon';\n+import { ActivatedRoute, RouterModule } from '@angular/router';\n+import { ApiService } from '../../services/api.service';\n+import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n+import { MatTableModule } from '@angular/material/table';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { FormsModule } from '@angular/forms';\n+import { CommonModule } from '@angular/common';\n+import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n+import { MatInputModule } from '@angular/material/input';\n+import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n+ import {MatProgressBarModule} from '@angular/material/progress-bar'; \n+\n+@Component({\n+  selector: 'app-levels',\n+  standalone: true,\n+  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n+  templateUrl: './levels.component.html',\n+  styleUrl: './levels.component.scss'\n+})\n+\n+export class LevelsComponent implements OnInit {\n+    @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+\n+  readonly route = inject(ActivatedRoute);\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'details', 'actions'];\n+  dataSource: any[] = [];\n+  constructor(\n+    private api: ApiService,\n+    private dialog: MatDialog\n+  ) { }\n+\n+  buildingId!: number;\n+  building: any = '';\n+  levels: any[] = [];\n+\n+  levelForm = {\n+  id: null,\n+  building_id: 0,\n+  name: '',\n+  floorplan: null\n+};\n+\n+  ngOnInit(): void {\n+    this.route.paramMap.subscribe(params => {\n+      const id = params.get('id');\n+      if (id) {\n+        this.buildingId = +id;\n+        this.loadBuilding();\n+        this.loadLevels();\n+      }\n+    });\n+  }\n+\n+  loadBuilding() {\n+    this.api.select('buildings', this.buildingId).subscribe({\n+      next: (res) => this.building = res,\n+      error: (err) => console.error('Épület lekérdezési hiba:', err)\n+    });\n+  }\n+\n+loadLevels() {\n+  this.api.selectAll('levels').subscribe({\n+    next: (res) => {\n+      this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n+      this.dataSource = this.levels;\n+    },\n+    error: (err) => console.error('Szintek lekérdezési hiba:', err)\n+  });\n+}\n+\n+save() {\n+  const { id, name } = this.levelForm;\n+\n+  if (!name) {\n+    alert('A szint neve kötelező!');\n+    return;\n+  }\n+\n+  this.levelForm.building_id = this.buildingId;\n+\n+  if (id) {\n+    // MÓDOSÍTÁS\n+    this.api.update('levels', id, this.levelForm).subscribe({\n+      next: () => {\n+        this.loadLevels();\n+        this.resetForm();\n+      },\n+      error: (err) => console.error('Hiba módosításkor:', err)\n+    });\n+  } else {\n+    // LÉTREHOZÁS\n+    this.api.insert('levels', this.levelForm).subscribe({\n+      next: () => {\n+        this.loadLevels();\n+        this.resetForm();\n+      },\n+      error: (err) => console.error('Hiba mentéskor:', err)\n+    });\n+  }\n+}\n+\n+onEdit(level: any) {\n+  this.levelForm = {\n+    id: level.id,\n+    building_id: level.building_id,\n+    name: level.name,\n+    floorplan: level.floorplan || null\n+  };\n+   this.panel.open();\n+}\n+\n+onDelete(level: any) {\n+  if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n+    this.api.delete('levels', level.id).subscribe({\n+      next: () => this.loadLevels(),\n+      error: (err) => console.error('Hiba törléskor:', err)\n+    });\n+  }\n+}\n+\n+resetForm() {\n+  this.levelForm = {\n+    id: null,\n+    building_id: this.buildingId,\n+    name: '',\n+    floorplan: null\n+  };\n+}\n+\n+openImageDialog(image: string): void {\n+  this.dialog.open(ImagemodalComponent, {\n+    data: { image },\n+    panelClass: 'fullscreen-dialog'\n+  });\n+}\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753362514634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n       if (id) {\n         this.buildingId = +id;\n         this.loadBuilding();\n         this.loadLevels();\n+        \n       }\n     });\n   }\n \n@@ -64,9 +65,20 @@\n loadLevels() {\n   this.api.selectAll('levels').subscribe({\n     next: (res) => {\n       this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n+\n+      this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n+  .map(level => ({\n+    ...level,\n+    occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+  }));\n+this.dataSource = this.levels;\n+\n+\n       this.dataSource = this.levels;\n+\n+\n     },\n     error: (err) => console.error('Szintek lekérdezési hiba:', err)\n   });\n }\n"
                },
                {
                    "date": 1753363254506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,15 +67,15 @@\n     next: (res) => {\n       this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n \n       this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n-  .map(level => ({\n-    ...level,\n-    occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n-  }));\n-this.dataSource = this.levels;\n+      .map(level => ({\n+        ...level,\n+        occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+      }));\n \n \n+\n       this.dataSource = this.levels;\n \n \n     },\n@@ -148,144 +148,5 @@\n     panelClass: 'fullscreen-dialog'\n   });\n }\n \n-}\n-import { Component, inject, OnInit, ViewChild } from '@angular/core';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatIconModule } from '@angular/material/icon';\n-import { ActivatedRoute, RouterModule } from '@angular/router';\n-import { ApiService } from '../../services/api.service';\n-import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n-import { MatTableModule } from '@angular/material/table';\n-import { MatFormFieldModule } from '@angular/material/form-field';\n-import { FormsModule } from '@angular/forms';\n-import { CommonModule } from '@angular/common';\n-import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n-import { MatInputModule } from '@angular/material/input';\n-import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n-\n-@Component({\n-  selector: 'app-levels',\n-  standalone: true,\n-  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule],\n-  templateUrl: './levels.component.html',\n-  styleUrl: './levels.component.scss'\n-})\n-\n-export class LevelsComponent implements OnInit {\n-    @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n-\n-  readonly route = inject(ActivatedRoute);\n-  displayedColumns: string[] = ['id', 'preview', 'name', 'details', 'actions'];\n-  dataSource: any[] = [];\n-  constructor(\n-    private api: ApiService,\n-    private dialog: MatDialog\n-  ) { }\n-\n-  buildingId!: number;\n-  building: any = '';\n-  levels: any[] = [];\n-\n-  levelForm = {\n-  id: null,\n-  building_id: 0,\n-  name: '',\n-  floorplan: null\n-};\n-\n-  ngOnInit(): void {\n-    this.route.paramMap.subscribe(params => {\n-      const id = params.get('id');\n-      if (id) {\n-        this.buildingId = +id;\n-        this.loadBuilding();\n-        this.loadLevels();\n-      }\n-    });\n-  }\n-\n-  loadBuilding() {\n-    this.api.select('buildings', this.buildingId).subscribe({\n-      next: (res) => this.building = res,\n-      error: (err) => console.error('Épület lekérdezési hiba:', err)\n-    });\n-  }\n-\n-loadLevels() {\n-  this.api.selectAll('levels').subscribe({\n-    next: (res) => {\n-      this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n-      this.dataSource = this.levels;\n-    },\n-    error: (err) => console.error('Szintek lekérdezési hiba:', err)\n-  });\n-}\n-\n-save() {\n-  const { id, name } = this.levelForm;\n-\n-  if (!name) {\n-    alert('A szint neve kötelező!');\n-    return;\n-  }\n-\n-  this.levelForm.building_id = this.buildingId;\n-\n-  if (id) {\n-    // MÓDOSÍTÁS\n-    this.api.update('levels', id, this.levelForm).subscribe({\n-      next: () => {\n-        this.loadLevels();\n-        this.resetForm();\n-      },\n-      error: (err) => console.error('Hiba módosításkor:', err)\n-    });\n-  } else {\n-    // LÉTREHOZÁS\n-    this.api.insert('levels', this.levelForm).subscribe({\n-      next: () => {\n-        this.loadLevels();\n-        this.resetForm();\n-      },\n-      error: (err) => console.error('Hiba mentéskor:', err)\n-    });\n-  }\n-}\n-\n-onEdit(level: any) {\n-  this.levelForm = {\n-    id: level.id,\n-    building_id: level.building_id,\n-    name: level.name,\n-    floorplan: level.floorplan || null\n-  };\n-   this.panel.open();\n-}\n-\n-onDelete(level: any) {\n-  if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n-    this.api.delete('levels', level.id).subscribe({\n-      next: () => this.loadLevels(),\n-      error: (err) => console.error('Hiba törléskor:', err)\n-    });\n-  }\n-}\n-\n-resetForm() {\n-  this.levelForm = {\n-    id: null,\n-    building_id: this.buildingId,\n-    name: '',\n-    floorplan: null\n-  };\n-}\n-\n-openImageDialog(image: string): void {\n-  this.dialog.open(ImagemodalComponent, {\n-    data: { image },\n-    panelClass: 'fullscreen-dialog'\n-  });\n-}\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753363398295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,13 +72,10 @@\n         ...level,\n         occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n       }));\n \n-\n-\n       this.dataSource = this.levels;\n \n-\n     },\n     error: (err) => console.error('Szintek lekérdezési hiba:', err)\n   });\n }\n"
                },
                {
                    "date": 1753434772004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n import { CommonModule } from '@angular/common';\n import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n import { MatInputModule } from '@angular/material/input';\n import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n- import {MatProgressBarModule} from '@angular/material/progress-bar'; \n+import { MatProgressBarModule } from '@angular/material/progress-bar';\n+import { SnackbarService } from '../../services/snackbar.service';\n \n @Component({\n   selector: 'app-levels',\n   standalone: true,\n@@ -21,37 +22,39 @@\n   styleUrl: './levels.component.scss'\n })\n \n export class LevelsComponent implements OnInit {\n-    @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n \n   readonly route = inject(ActivatedRoute);\n   displayedColumns: string[] = ['id', 'preview', 'name', 'details', 'actions'];\n   dataSource: any[] = [];\n   constructor(\n     private api: ApiService,\n-    private dialog: MatDialog\n+    private dialog: MatDialog,\n+    private snackbar: SnackbarService\n+\n   ) { }\n \n   buildingId!: number;\n   building: any = '';\n   levels: any[] = [];\n \n   levelForm = {\n-  id: null,\n-  building_id: 0,\n-  name: '',\n-  floorplan: null\n-};\n+    id: null,\n+    building_id: 0,\n+    name: '',\n+    floorplan: null\n+  };\n \n   ngOnInit(): void {\n     this.route.paramMap.subscribe(params => {\n       const id = params.get('id');\n       if (id) {\n         this.buildingId = +id;\n         this.loadBuilding();\n         this.loadLevels();\n-        \n+\n       }\n     });\n   }\n \n@@ -61,89 +64,95 @@\n       error: (err) => console.error('Épület lekérdezési hiba:', err)\n     });\n   }\n \n-loadLevels() {\n-  this.api.selectAll('levels').subscribe({\n-    next: (res) => {\n-      this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n+  loadLevels() {\n+    this.api.selectAll('levels').subscribe({\n+      next: (res) => {\n+        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n \n-      this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n-      .map(level => ({\n-        ...level,\n-        occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n-      }));\n+        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n+          .map(level => ({\n+            ...level,\n+            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+          }));\n \n-      this.dataSource = this.levels;\n+        this.dataSource = this.levels;\n \n-    },\n-    error: (err) => console.error('Szintek lekérdezési hiba:', err)\n-  });\n-}\n+      },\n+      error: (err) => console.error('Szintek lekérdezési hiba:', err)\n+    });\n+  }\n \n-save() {\n-  const { id, name } = this.levelForm;\n+  save() {\n+    const { id, name } = this.levelForm;\n \n-  if (!name) {\n-    alert('A szint neve kötelező!');\n-    return;\n+    if (!name) {\n+      alert('A szint neve kötelező!');\n+      return;\n+    }\n+\n+    this.levelForm.building_id = this.buildingId;\n+\n+    if (id) {\n+      // MÓDOSÍTÁS\n+      this.api.update('levels', id, this.levelForm).subscribe({\n+        next: () => {\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => console.error('Hiba módosításkor:', err)\n+      });\n+    } else {\n+      // LÉTREHOZÁS\n+      this.api.insert('levels', this.levelForm).subscribe({\n+        next: () => {\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => console.error('Hiba mentéskor:', err)\n+      });\n+    }\n   }\n \n-  this.levelForm.building_id = this.buildingId;\n+  onEdit(level: any) {\n+    this.levelForm = {\n+      id: level.id,\n+      building_id: level.building_id,\n+      name: level.name,\n+      floorplan: level.floorplan || null\n+    };\n+    this.panel.open();\n+  }\n \n-  if (id) {\n-    // MÓDOSÍTÁS\n-    this.api.update('levels', id, this.levelForm).subscribe({\n-      next: () => {\n-        this.loadLevels();\n-        this.resetForm();\n-      },\n-      error: (err) => console.error('Hiba módosításkor:', err)\n-    });\n-  } else {\n-    // LÉTREHOZÁS\n-    this.api.insert('levels', this.levelForm).subscribe({\n-      next: () => {\n-        this.loadLevels();\n-        this.resetForm();\n-      },\n-      error: (err) => console.error('Hiba mentéskor:', err)\n-    });\n+  onDelete(level: any) {\n+    if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n+      this.api.delete('levels', level.id).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres törlés!', 'success');\n+          this.loadLevels();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba törlés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    }\n   }\n-}\n \n-onEdit(level: any) {\n-  this.levelForm = {\n-    id: level.id,\n-    building_id: level.building_id,\n-    name: level.name,\n-    floorplan: level.floorplan || null\n-  };\n-   this.panel.open();\n-}\n \n-onDelete(level: any) {\n-  if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n-    this.api.delete('levels', level.id).subscribe({\n-      next: () => this.loadLevels(),\n-      error: (err) => console.error('Hiba törléskor:', err)\n+  resetForm() {\n+    this.levelForm = {\n+      id: null,\n+      building_id: this.buildingId,\n+      name: '',\n+      floorplan: null\n+    };\n+  }\n+\n+  openImageDialog(image: string): void {\n+    this.dialog.open(ImagemodalComponent, {\n+      data: { image },\n+      panelClass: 'fullscreen-dialog'\n     });\n   }\n-}\n \n-resetForm() {\n-  this.levelForm = {\n-    id: null,\n-    building_id: this.buildingId,\n-    name: '',\n-    floorplan: null\n-  };\n-}\n-\n-openImageDialog(image: string): void {\n-  this.dialog.open(ImagemodalComponent, {\n-    data: { image },\n-    panelClass: 'fullscreen-dialog'\n-  });\n-}\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753434821261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,162 @@\n+import { Component, inject, OnInit, ViewChild } from '@angular/core';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatIconModule } from '@angular/material/icon';\n+import { ActivatedRoute, RouterModule } from '@angular/router';\n+import { ApiService } from '../../services/api.service';\n+import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n+import { MatTableModule } from '@angular/material/table';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { FormsModule } from '@angular/forms';\n+import { CommonModule } from '@angular/common';\n+import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n+import { MatInputModule } from '@angular/material/input';\n+import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n+import { MatProgressBarModule } from '@angular/material/progress-bar';\n+import { SnackbarService } from '../../services/snackbar.service';\n+\n+@Component({\n+  selector: 'app-levels',\n+  standalone: true,\n+  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n+  templateUrl: './levels.component.html',\n+  styleUrl: './levels.component.scss'\n+})\n+\n+export class LevelsComponent implements OnInit {\n+  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+\n+  readonly route = inject(ActivatedRoute);\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'details', 'actions'];\n+  dataSource: any[] = [];\n+  constructor(\n+    private api: ApiService,\n+    private dialog: MatDialog,\n+    private snackbar: SnackbarService\n+\n+  ) { }\n+\n+  buildingId!: number;\n+  building: any = '';\n+  levels: any[] = [];\n+\n+  levelForm = {\n+    id: null,\n+    building_id: 0,\n+    name: '',\n+    floorplan: null\n+  };\n+\n+  ngOnInit(): void {\n+    this.route.paramMap.subscribe(params => {\n+      const id = params.get('id');\n+      if (id) {\n+        this.buildingId = +id;\n+        this.loadBuilding();\n+        this.loadLevels();\n+\n+      }\n+    });\n+  }\n+\n+  loadBuilding() {\n+    this.api.select('buildings', this.buildingId).subscribe({\n+      next: (res) => this.building = res,\n+      error: (err) => console.error('Épület lekérdezési hiba:', err)\n+    });\n+  }\n+\n+  loadLevels() {\n+    this.api.selectAll('levels').subscribe({\n+      next: (res) => {\n+        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n+\n+        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n+          .map(level => ({\n+            ...level,\n+            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+          }));\n+\n+        this.dataSource = this.levels;\n+\n+      },\n+      error: (err) => console.error('Szintek lekérdezési hiba:', err)\n+    });\n+  }\n+\n+save() {\n+  const { id, name } = this.levelForm;\n+\n+  if (!name) {\n+    this.snackbar.show('A szint neve kötelező!', 'error');\n+    return;\n+  }\n+\n+  this.levelForm.building_id = this.buildingId;\n+\n+  if (id) {\n+    this.api.update('levels', id, this.levelForm).subscribe({\n+      next: () => {\n+        this.snackbar.show('Sikeres módosítás!', 'success');\n+        this.loadLevels();\n+        this.resetForm();\n+      },\n+      error: (err) => {\n+        this.snackbar.show('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+      }\n+    });\n+  } else {\n+    this.api.insert('levels', this.levelForm).subscribe({\n+      next: () => {\n+        this.snackbar.show('Sikeres mentés!', 'success');\n+        this.loadLevels();\n+        this.resetForm();\n+      },\n+      error: (err) => {\n+        this.snackbar.show('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+      }\n+    });\n+  }\n+}\n+\n+\n+  onEdit(level: any) {\n+    this.levelForm = {\n+      id: level.id,\n+      building_id: level.building_id,\n+      name: level.name,\n+      floorplan: level.floorplan || null\n+    };\n+    this.panel.open();\n+  }\n+\n+  onDelete(level: any) {\n+    if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n+      this.api.delete('levels', level.id).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres törlés!', 'success');\n+          this.loadLevels();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba törlés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    }\n+  }\n+\n+  resetForm() {\n+    this.levelForm = {\n+      id: null,\n+      building_id: this.buildingId,\n+      name: '',\n+      floorplan: null\n+    };\n+  }\n+\n+  openImageDialog(image: string): void {\n+    this.dialog.open(ImagemodalComponent, {\n+      data: { image },\n+      panelClass: 'fullscreen-dialog'\n+    });\n+  }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753434859060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,32 +57,39 @@\n       }\n     });\n   }\n \n-  loadBuilding() {\n-    this.api.select('buildings', this.buildingId).subscribe({\n-      next: (res) => this.building = res,\n-      error: (err) => console.error('Épület lekérdezési hiba:', err)\n-    });\n-  }\n+loadBuilding() {\n+  this.api.select('buildings', this.buildingId).subscribe({\n+    next: (res) => {\n+      this.building = res;\n+    },\n+    error: (err) => {\n+      console.error('Épület lekérdezési hiba:', err);\n+      this.snackbar.show('Hiba történt az épület betöltésekor.', 'error');\n+    }\n+  });\n+}\n \n-  loadLevels() {\n-    this.api.selectAll('levels').subscribe({\n-      next: (res) => {\n-        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n \n-        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n-          .map(level => ({\n-            ...level,\n-            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n-          }));\n+loadLevels() {\n+  this.api.selectAll('levels').subscribe({\n+    next: (res) => {\n+      this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n+        .map(level => ({\n+          ...level,\n+          occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+        }));\n \n-        this.dataSource = this.levels;\n+      this.dataSource = this.levels;\n+    },\n+    error: (err) => {\n+      console.error('Szintek lekérdezési hiba:', err);\n+      this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n+    }\n+  });\n+}\n \n-      },\n-      error: (err) => console.error('Szintek lekérdezési hiba:', err)\n-    });\n-  }\n \n save() {\n   const { id, name } = this.levelForm;\n \n@@ -158,163 +165,5 @@\n       panelClass: 'fullscreen-dialog'\n     });\n   }\n \n-}\n-import { Component, inject, OnInit, ViewChild } from '@angular/core';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatIconModule } from '@angular/material/icon';\n-import { ActivatedRoute, RouterModule } from '@angular/router';\n-import { ApiService } from '../../services/api.service';\n-import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n-import { MatTableModule } from '@angular/material/table';\n-import { MatFormFieldModule } from '@angular/material/form-field';\n-import { FormsModule } from '@angular/forms';\n-import { CommonModule } from '@angular/common';\n-import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n-import { MatInputModule } from '@angular/material/input';\n-import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n-import { MatProgressBarModule } from '@angular/material/progress-bar';\n-import { SnackbarService } from '../../services/snackbar.service';\n-\n-@Component({\n-  selector: 'app-levels',\n-  standalone: true,\n-  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n-  templateUrl: './levels.component.html',\n-  styleUrl: './levels.component.scss'\n-})\n-\n-export class LevelsComponent implements OnInit {\n-  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n-\n-  readonly route = inject(ActivatedRoute);\n-  displayedColumns: string[] = ['id', 'preview', 'name', 'details', 'actions'];\n-  dataSource: any[] = [];\n-  constructor(\n-    private api: ApiService,\n-    private dialog: MatDialog,\n-    private snackbar: SnackbarService\n-\n-  ) { }\n-\n-  buildingId!: number;\n-  building: any = '';\n-  levels: any[] = [];\n-\n-  levelForm = {\n-    id: null,\n-    building_id: 0,\n-    name: '',\n-    floorplan: null\n-  };\n-\n-  ngOnInit(): void {\n-    this.route.paramMap.subscribe(params => {\n-      const id = params.get('id');\n-      if (id) {\n-        this.buildingId = +id;\n-        this.loadBuilding();\n-        this.loadLevels();\n-\n-      }\n-    });\n-  }\n-\n-  loadBuilding() {\n-    this.api.select('buildings', this.buildingId).subscribe({\n-      next: (res) => this.building = res,\n-      error: (err) => console.error('Épület lekérdezési hiba:', err)\n-    });\n-  }\n-\n-  loadLevels() {\n-    this.api.selectAll('levels').subscribe({\n-      next: (res) => {\n-        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId);\n-\n-        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n-          .map(level => ({\n-            ...level,\n-            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n-          }));\n-\n-        this.dataSource = this.levels;\n-\n-      },\n-      error: (err) => console.error('Szintek lekérdezési hiba:', err)\n-    });\n-  }\n-\n-  save() {\n-    const { id, name } = this.levelForm;\n-\n-    if (!name) {\n-      alert('A szint neve kötelező!');\n-      return;\n-    }\n-\n-    this.levelForm.building_id = this.buildingId;\n-\n-    if (id) {\n-      // MÓDOSÍTÁS\n-      this.api.update('levels', id, this.levelForm).subscribe({\n-        next: () => {\n-          this.loadLevels();\n-          this.resetForm();\n-        },\n-        error: (err) => console.error('Hiba módosításkor:', err)\n-      });\n-    } else {\n-      // LÉTREHOZÁS\n-      this.api.insert('levels', this.levelForm).subscribe({\n-        next: () => {\n-          this.loadLevels();\n-          this.resetForm();\n-        },\n-        error: (err) => console.error('Hiba mentéskor:', err)\n-      });\n-    }\n-  }\n-\n-  onEdit(level: any) {\n-    this.levelForm = {\n-      id: level.id,\n-      building_id: level.building_id,\n-      name: level.name,\n-      floorplan: level.floorplan || null\n-    };\n-    this.panel.open();\n-  }\n-\n-  onDelete(level: any) {\n-    if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n-      this.api.delete('levels', level.id).subscribe({\n-        next: () => {\n-          this.snackbar.show('Sikeres törlés!', 'success');\n-          this.loadLevels();\n-        },\n-        error: (err) => {\n-          this.snackbar.show('Hiba törlés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n-        }\n-      });\n-    }\n-  }\n-\n-\n-  resetForm() {\n-    this.levelForm = {\n-      id: null,\n-      building_id: this.buildingId,\n-      name: '',\n-      floorplan: null\n-    };\n-  }\n-\n-  openImageDialog(image: string): void {\n-    this.dialog.open(ImagemodalComponent, {\n-      data: { image },\n-      panelClass: 'fullscreen-dialog'\n-    });\n-  }\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753434874252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,76 +57,73 @@\n       }\n     });\n   }\n \n-loadBuilding() {\n-  this.api.select('buildings', this.buildingId).subscribe({\n-    next: (res) => {\n-      this.building = res;\n-    },\n-    error: (err) => {\n-      console.error('Épület lekérdezési hiba:', err);\n-      this.snackbar.show('Hiba történt az épület betöltésekor.', 'error');\n-    }\n-  });\n-}\n-\n-\n-loadLevels() {\n-  this.api.selectAll('levels').subscribe({\n-    next: (res) => {\n-      this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n-        .map(level => ({\n-          ...level,\n-          occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n-        }));\n-\n-      this.dataSource = this.levels;\n-    },\n-    error: (err) => {\n-      console.error('Szintek lekérdezési hiba:', err);\n-      this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n-    }\n-  });\n-}\n-\n-\n-save() {\n-  const { id, name } = this.levelForm;\n-\n-  if (!name) {\n-    this.snackbar.show('A szint neve kötelező!', 'error');\n-    return;\n-  }\n-\n-  this.levelForm.building_id = this.buildingId;\n-\n-  if (id) {\n-    this.api.update('levels', id, this.levelForm).subscribe({\n-      next: () => {\n-        this.snackbar.show('Sikeres módosítás!', 'success');\n-        this.loadLevels();\n-        this.resetForm();\n+  loadBuilding() {\n+    this.api.select('buildings', this.buildingId).subscribe({\n+      next: (res) => {\n+        this.building = res;\n       },\n       error: (err) => {\n-        this.snackbar.show('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        console.error('Épület lekérdezési hiba:', err);\n+        this.snackbar.show('Hiba történt az épület betöltésekor.', 'error');\n       }\n     });\n-  } else {\n-    this.api.insert('levels', this.levelForm).subscribe({\n-      next: () => {\n-        this.snackbar.show('Sikeres mentés!', 'success');\n-        this.loadLevels();\n-        this.resetForm();\n+  }\n+\n+  loadLevels() {\n+    this.api.selectAll('levels').subscribe({\n+      next: (res) => {\n+        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n+          .map(level => ({\n+            ...level,\n+            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+          }));\n+\n+        this.dataSource = this.levels;\n       },\n       error: (err) => {\n-        this.snackbar.show('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        console.error('Szintek lekérdezési hiba:', err);\n+        this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n       }\n     });\n   }\n-}\n \n+  save() {\n+    const { id, name } = this.levelForm;\n \n+    if (!name) {\n+      this.snackbar.show('A szint neve kötelező!', 'error');\n+      return;\n+    }\n+\n+    this.levelForm.building_id = this.buildingId;\n+\n+    if (id) {\n+      this.api.update('levels', id, this.levelForm).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres módosítás!', 'success');\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    } else {\n+      this.api.insert('levels', this.levelForm).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres mentés!', 'success');\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    }\n+  }\n+\n   onEdit(level: any) {\n     this.levelForm = {\n       id: level.id,\n       building_id: level.building_id,\n"
                },
                {
                    "date": 1753446419882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,8 +138,9 @@\n       this.api.delete('levels', level.id).subscribe({\n         next: () => {\n           this.snackbar.show('Sikeres törlés!', 'success');\n           this.loadLevels();\n+          this.resetForm();\n         },\n         error: (err) => {\n           this.snackbar.show('Hiba törlés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n         }\n"
                },
                {
                    "date": 1753447819712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n     });\n   }\n \n   loadLevels() {\n-    this.api.selectAll('levels').subscribe({\n+    this.api.selectAll('levels_vt').subscribe({\n       next: (res) => {\n         this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n           .map(level => ({\n             ...level,\n"
                },
                {
                    "date": 1753447901113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,167 @@\n+import { Component, inject, OnInit, ViewChild } from '@angular/core';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatIconModule } from '@angular/material/icon';\n+import { ActivatedRoute, RouterModule } from '@angular/router';\n+import { ApiService } from '../../services/api.service';\n+import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n+import { MatTableModule } from '@angular/material/table';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { FormsModule } from '@angular/forms';\n+import { CommonModule } from '@angular/common';\n+import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n+import { MatInputModule } from '@angular/material/input';\n+import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n+import { MatProgressBarModule } from '@angular/material/progress-bar';\n+import { SnackbarService } from '../../services/snackbar.service';\n+\n+@Component({\n+  selector: 'app-levels',\n+  standalone: true,\n+  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n+  templateUrl: './levels.component.html',\n+  styleUrl: './levels.component.scss'\n+})\n+\n+export class LevelsComponent implements OnInit {\n+  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+\n+  readonly route = inject(ActivatedRoute);\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'rooms', 'details', 'actions'];\n+  dataSource: any[] = [];\n+  constructor(\n+    private api: ApiService,\n+    private dialog: MatDialog,\n+    private snackbar: SnackbarService\n+\n+  ) { }\n+\n+  buildingId!: number;\n+  building: any = '';\n+  levels: any[] = [];\n+\n+  levelForm = {\n+    id: null,\n+    building_id: 0,\n+    name: '',\n+    floorplan: null\n+  };\n+\n+  ngOnInit(): void {\n+    this.route.paramMap.subscribe(params => {\n+      const id = params.get('id');\n+      if (id) {\n+        this.buildingId = +id;\n+        this.loadBuilding();\n+        this.loadLevels();\n+\n+      }\n+    });\n+  }\n+\n+  loadBuilding() {\n+    this.api.select('buildings', this.buildingId).subscribe({\n+      next: (res) => {\n+        this.building = res;\n+      },\n+      error: (err) => {\n+        console.error('Épület lekérdezési hiba:', err);\n+        this.snackbar.show('Hiba történt az épület betöltésekor.', 'error');\n+      }\n+    });\n+  }\n+\n+  loadLevels() {\n+    this.api.selectAll('levels_vt').subscribe({\n+      next: (res) => {\n+        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n+          .map(level => ({\n+            ...level,\n+            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+          }));\n+\n+        this.dataSource = this.levels;\n+      },\n+      error: (err) => {\n+        console.error('Szintek lekérdezési hiba:', err);\n+        this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n+      }\n+    });\n+  }\n+\n+  save() {\n+    const { id, name } = this.levelForm;\n+\n+    if (!name) {\n+      this.snackbar.show('A szint neve kötelező!', 'error');\n+      return;\n+    }\n+\n+    this.levelForm.building_id = this.buildingId;\n+\n+    if (id) {\n+      this.api.update('levels', id, this.levelForm).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres módosítás!', 'success');\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    } else {\n+      this.api.insert('levels', this.levelForm).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres mentés!', 'success');\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    }\n+  }\n+\n+  onEdit(level: any) {\n+    this.levelForm = {\n+      id: level.id,\n+      building_id: level.building_id,\n+      name: level.name,\n+      floorplan: level.floorplan || null\n+    };\n+    this.panel.open();\n+  }\n+\n+  onDelete(level: any) {\n+    if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n+      this.api.delete('levels', level.id).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres törlés!', 'success');\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba törlés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    }\n+  }\n+\n+  resetForm() {\n+    this.levelForm = {\n+      id: null,\n+      building_id: this.buildingId,\n+      name: '',\n+      floorplan: null\n+    };\n+  }\n+\n+  openImageDialog(image: string): void {\n+    this.dialog.open(ImagemodalComponent, {\n+      data: { image },\n+      panelClass: 'fullscreen-dialog'\n+    });\n+  }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753450900922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n       next: (res) => {\n         this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n           .map(level => ({\n             ...level,\n-            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n+            occupancy: Math.floor(level.occupied *300 / level.rooms)   // 1-100%\n           }));\n \n         this.dataSource = this.levels;\n       },\n"
                },
                {
                    "date": 1753450927723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n       next: (res) => {\n         this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n           .map(level => ({\n             ...level,\n-            occupancy: Math.floor(level.occupied *300 / level.rooms)   // 1-100%\n+            occupancy: Math.floor(level.occupied * 100 / level.rooms)   // 1-100%\n           }));\n \n         this.dataSource = this.levels;\n       },\n@@ -163,172 +163,5 @@\n       panelClass: 'fullscreen-dialog'\n     });\n   }\n \n-}\n-import { Component, inject, OnInit, ViewChild } from '@angular/core';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatIconModule } from '@angular/material/icon';\n-import { ActivatedRoute, RouterModule } from '@angular/router';\n-import { ApiService } from '../../services/api.service';\n-import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n-import { MatTableModule } from '@angular/material/table';\n-import { MatFormFieldModule } from '@angular/material/form-field';\n-import { FormsModule } from '@angular/forms';\n-import { CommonModule } from '@angular/common';\n-import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n-import { MatInputModule } from '@angular/material/input';\n-import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n-import { MatProgressBarModule } from '@angular/material/progress-bar';\n-import { SnackbarService } from '../../services/snackbar.service';\n-\n-@Component({\n-  selector: 'app-levels',\n-  standalone: true,\n-  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n-  templateUrl: './levels.component.html',\n-  styleUrl: './levels.component.scss'\n-})\n-\n-export class LevelsComponent implements OnInit {\n-  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n-\n-  readonly route = inject(ActivatedRoute);\n-  displayedColumns: string[] = ['id', 'preview', 'name', 'details', 'actions'];\n-  dataSource: any[] = [];\n-  constructor(\n-    private api: ApiService,\n-    private dialog: MatDialog,\n-    private snackbar: SnackbarService\n-\n-  ) { }\n-\n-  buildingId!: number;\n-  building: any = '';\n-  levels: any[] = [];\n-\n-  levelForm = {\n-    id: null,\n-    building_id: 0,\n-    name: '',\n-    floorplan: null\n-  };\n-\n-  ngOnInit(): void {\n-    this.route.paramMap.subscribe(params => {\n-      const id = params.get('id');\n-      if (id) {\n-        this.buildingId = +id;\n-        this.loadBuilding();\n-        this.loadLevels();\n-\n-      }\n-    });\n-  }\n-\n-  loadBuilding() {\n-    this.api.select('buildings', this.buildingId).subscribe({\n-      next: (res) => {\n-        this.building = res;\n-      },\n-      error: (err) => {\n-        console.error('Épület lekérdezési hiba:', err);\n-        this.snackbar.show('Hiba történt az épület betöltésekor.', 'error');\n-      }\n-    });\n-  }\n-\n-  loadLevels() {\n-    this.api.selectAll('levels_vt').subscribe({\n-      next: (res) => {\n-        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n-          .map(level => ({\n-            ...level,\n-            occupancy: Math.floor(Math.random() * 100) + 1  // 1-100%\n-          }));\n-\n-        this.dataSource = this.levels;\n-      },\n-      error: (err) => {\n-        console.error('Szintek lekérdezési hiba:', err);\n-        this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n-      }\n-    });\n-  }\n-\n-  save() {\n-    const { id, name } = this.levelForm;\n-\n-    if (!name) {\n-      this.snackbar.show('A szint neve kötelező!', 'error');\n-      return;\n-    }\n-\n-    this.levelForm.building_id = this.buildingId;\n-\n-    if (id) {\n-      this.api.update('levels', id, this.levelForm).subscribe({\n-        next: () => {\n-          this.snackbar.show('Sikeres módosítás!', 'success');\n-          this.loadLevels();\n-          this.resetForm();\n-        },\n-        error: (err) => {\n-          this.snackbar.show('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n-        }\n-      });\n-    } else {\n-      this.api.insert('levels', this.levelForm).subscribe({\n-        next: () => {\n-          this.snackbar.show('Sikeres mentés!', 'success');\n-          this.loadLevels();\n-          this.resetForm();\n-        },\n-        error: (err) => {\n-          this.snackbar.show('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n-        }\n-      });\n-    }\n-  }\n-\n-  onEdit(level: any) {\n-    this.levelForm = {\n-      id: level.id,\n-      building_id: level.building_id,\n-      name: level.name,\n-      floorplan: level.floorplan || null\n-    };\n-    this.panel.open();\n-  }\n-\n-  onDelete(level: any) {\n-    if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n-      this.api.delete('levels', level.id).subscribe({\n-        next: () => {\n-          this.snackbar.show('Sikeres törlés!', 'success');\n-          this.loadLevels();\n-          this.resetForm();\n-        },\n-        error: (err) => {\n-          this.snackbar.show('Hiba törlés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n-        }\n-      });\n-    }\n-  }\n-\n-  resetForm() {\n-    this.levelForm = {\n-      id: null,\n-      building_id: this.buildingId,\n-      name: '',\n-      floorplan: null\n-    };\n-  }\n-\n-  openImageDialog(image: string): void {\n-    this.dialog.open(ImagemodalComponent, {\n-      data: { image },\n-      panelClass: 'fullscreen-dialog'\n-    });\n-  }\n-\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753451971238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n       next: (res) => {\n         this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n           .map(level => ({\n             ...level,\n-            occupancy: Math.floor(level.occupied * 100 / level.rooms)   // 1-100%\n+            occupancy: Math.floor(level.occupied * 100 / level.rooms)  \n           }));\n \n         this.dataSource = this.levels;\n       },\n"
                },
                {
                    "date": 1753452664877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,168 @@\n+import { Component, inject, OnInit, ViewChild } from '@angular/core';\n+import { MatButtonModule } from '@angular/material/button';\n+import { MatIconModule } from '@angular/material/icon';\n+import { ActivatedRoute, RouterModule } from '@angular/router';\n+import { ApiService } from '../../services/api.service';\n+import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n+import { MatTableDataSource, MatTableModule } from '@angular/material/table';\n+import { MatFormFieldModule } from '@angular/material/form-field';\n+import { FormsModule } from '@angular/forms';\n+import { CommonModule } from '@angular/common';\n+import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n+import { MatInputModule } from '@angular/material/input';\n+import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n+import { MatProgressBarModule } from '@angular/material/progress-bar';\n+import { SnackbarService } from '../../services/snackbar.service';\n+\n+@Component({\n+  selector: 'app-levels',\n+  standalone: true,\n+  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n+  templateUrl: './levels.component.html',\n+  styleUrl: './levels.component.scss'\n+})\n+\n+export class LevelsComponent implements OnInit {\n+  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+\n+  readonly route = inject(ActivatedRoute);\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'rooms', 'details', 'actions'];\n+  dataSource = new MatTableDataSource<any>();\n+  \n+  constructor(\n+    private api: ApiService,\n+    private dialog: MatDialog,\n+    private snackbar: SnackbarService\n+\n+  ) { }\n+\n+  buildingId!: number;\n+  building: any = '';\n+  levels: any[] = [];\n+\n+  levelForm = {\n+    id: null,\n+    building_id: 0,\n+    name: '',\n+    floorplan: null\n+  };\n+\n+  ngOnInit(): void {\n+    this.route.paramMap.subscribe(params => {\n+      const id = params.get('id');\n+      if (id) {\n+        this.buildingId = +id;\n+        this.loadBuilding();\n+        this.loadLevels();\n+\n+      }\n+    });\n+  }\n+\n+  loadBuilding() {\n+    this.api.select('buildings', this.buildingId).subscribe({\n+      next: (res) => {\n+        this.building = res;\n+      },\n+      error: (err) => {\n+        console.error('Épület lekérdezési hiba:', err);\n+        this.snackbar.show('Hiba történt az épület betöltésekor.', 'error');\n+      }\n+    });\n+  }\n+\n+  loadLevels() {\n+    this.api.selectAll('levels_vt').subscribe({\n+      next: (res) => {\n+        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n+          .map(level => ({\n+            ...level,\n+            occupancy: Math.floor(level.occupied * 100 / level.rooms)  \n+          }));\n+\n+        this.dataSource = this.levels;\n+      },\n+      error: (err) => {\n+        console.error('Szintek lekérdezési hiba:', err);\n+        this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n+      }\n+    });\n+  }\n+\n+  save() {\n+    const { id, name } = this.levelForm;\n+\n+    if (!name) {\n+      this.snackbar.show('A szint neve kötelező!', 'error');\n+      return;\n+    }\n+\n+    this.levelForm.building_id = this.buildingId;\n+\n+    if (id) {\n+      this.api.update('levels', id, this.levelForm).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres módosítás!', 'success');\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    } else {\n+      this.api.insert('levels', this.levelForm).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres mentés!', 'success');\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    }\n+  }\n+\n+  onEdit(level: any) {\n+    this.levelForm = {\n+      id: level.id,\n+      building_id: level.building_id,\n+      name: level.name,\n+      floorplan: level.floorplan || null\n+    };\n+    this.panel.open();\n+  }\n+\n+  onDelete(level: any) {\n+    if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n+      this.api.delete('levels', level.id).subscribe({\n+        next: () => {\n+          this.snackbar.show('Sikeres törlés!', 'success');\n+          this.loadLevels();\n+          this.resetForm();\n+        },\n+        error: (err) => {\n+          this.snackbar.show('Hiba törlés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n+        }\n+      });\n+    }\n+  }\n+\n+  resetForm() {\n+    this.levelForm = {\n+      id: null,\n+      building_id: this.buildingId,\n+      name: '',\n+      floorplan: null\n+    };\n+  }\n+\n+  openImageDialog(image: string): void {\n+    this.dialog.open(ImagemodalComponent, {\n+      data: { image },\n+      panelClass: 'fullscreen-dialog'\n+    });\n+  }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1753452688453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Component, inject, OnInit, ViewChild } from '@angular/core';\n+import { AfterViewInit, Component, inject, OnInit, ViewChild } from '@angular/core';\n import { MatButtonModule } from '@angular/material/button';\n import { MatIconModule } from '@angular/material/icon';\n import { ActivatedRoute, RouterModule } from '@angular/router';\n import { ApiService } from '../../services/api.service';\n@@ -21,15 +21,15 @@\n   templateUrl: './levels.component.html',\n   styleUrl: './levels.component.scss'\n })\n \n-export class LevelsComponent implements OnInit {\n+export class LevelsComponent implements OnInit, AfterViewInit {\n   @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n \n   readonly route = inject(ActivatedRoute);\n   displayedColumns: string[] = ['id', 'preview', 'name', 'rooms', 'details', 'actions'];\n   dataSource = new MatTableDataSource<any>();\n-  \n+\n   constructor(\n     private api: ApiService,\n     private dialog: MatDialog,\n     private snackbar: SnackbarService\n@@ -58,175 +58,12 @@\n       }\n     });\n   }\n \n-  loadBuilding() {\n-    this.api.select('buildings', this.buildingId).subscribe({\n-      next: (res) => {\n-        this.building = res;\n-      },\n-      error: (err) => {\n-        console.error('Épület lekérdezési hiba:', err);\n-        this.snackbar.show('Hiba történt az épület betöltésekor.', 'error');\n-      }\n-    });\n-  }\n-\n-  loadLevels() {\n-    this.api.selectAll('levels_vt').subscribe({\n-      next: (res) => {\n-        this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n-          .map(level => ({\n-            ...level,\n-            occupancy: Math.floor(level.occupied * 100 / level.rooms)  \n-          }));\n-\n-        this.dataSource = this.levels;\n-      },\n-      error: (err) => {\n-        console.error('Szintek lekérdezési hiba:', err);\n-        this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n-      }\n-    });\n-  }\n-\n-  save() {\n-    const { id, name } = this.levelForm;\n-\n-    if (!name) {\n-      this.snackbar.show('A szint neve kötelező!', 'error');\n-      return;\n-    }\n-\n-    this.levelForm.building_id = this.buildingId;\n-\n-    if (id) {\n-      this.api.update('levels', id, this.levelForm).subscribe({\n-        next: () => {\n-          this.snackbar.show('Sikeres módosítás!', 'success');\n-          this.loadLevels();\n-          this.resetForm();\n-        },\n-        error: (err) => {\n-          this.snackbar.show('Hiba módosítás közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n-        }\n-      });\n-    } else {\n-      this.api.insert('levels', this.levelForm).subscribe({\n-        next: () => {\n-          this.snackbar.show('Sikeres mentés!', 'success');\n-          this.loadLevels();\n-          this.resetForm();\n-        },\n-        error: (err) => {\n-          this.snackbar.show('Hiba mentés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n-        }\n-      });\n-    }\n-  }\n-\n-  onEdit(level: any) {\n-    this.levelForm = {\n-      id: level.id,\n-      building_id: level.building_id,\n-      name: level.name,\n-      floorplan: level.floorplan || null\n-    };\n-    this.panel.open();\n-  }\n-\n-  onDelete(level: any) {\n-    if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n-      this.api.delete('levels', level.id).subscribe({\n-        next: () => {\n-          this.snackbar.show('Sikeres törlés!', 'success');\n-          this.loadLevels();\n-          this.resetForm();\n-        },\n-        error: (err) => {\n-          this.snackbar.show('Hiba törlés közben: ' + (err?.error || 'Ismeretlen hiba'), 'error');\n-        }\n-      });\n-    }\n-  }\n-\n-  resetForm() {\n-    this.levelForm = {\n-      id: null,\n-      building_id: this.buildingId,\n-      name: '',\n-      floorplan: null\n-    };\n-  }\n-\n-  openImageDialog(image: string): void {\n-    this.dialog.open(ImagemodalComponent, {\n-      data: { image },\n-      panelClass: 'fullscreen-dialog'\n-    });\n-  }\n-\n+    ngAfterViewInit() {\n+  this.dataSource.paginator = this.paginator;\n }\n-import { Component, inject, OnInit, ViewChild } from '@angular/core';\n-import { MatButtonModule } from '@angular/material/button';\n-import { MatIconModule } from '@angular/material/icon';\n-import { ActivatedRoute, RouterModule } from '@angular/router';\n-import { ApiService } from '../../services/api.service';\n-import { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\n-import { MatTableModule } from '@angular/material/table';\n-import { MatFormFieldModule } from '@angular/material/form-field';\n-import { FormsModule } from '@angular/forms';\n-import { CommonModule } from '@angular/common';\n-import { MatDialog, MatDialogModule } from '@angular/material/dialog';\n-import { MatInputModule } from '@angular/material/input';\n-import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n-import { MatProgressBarModule } from '@angular/material/progress-bar';\n-import { SnackbarService } from '../../services/snackbar.service';\n \n-@Component({\n-  selector: 'app-levels',\n-  standalone: true,\n-  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n-  templateUrl: './levels.component.html',\n-  styleUrl: './levels.component.scss'\n-})\n-\n-export class LevelsComponent implements OnInit {\n-  @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n-\n-  readonly route = inject(ActivatedRoute);\n-  displayedColumns: string[] = ['id', 'preview', 'name', 'rooms', 'details', 'actions'];\n-  dataSource: any[] = [];\n-  constructor(\n-    private api: ApiService,\n-    private dialog: MatDialog,\n-    private snackbar: SnackbarService\n-\n-  ) { }\n-\n-  buildingId!: number;\n-  building: any = '';\n-  levels: any[] = [];\n-\n-  levelForm = {\n-    id: null,\n-    building_id: 0,\n-    name: '',\n-    floorplan: null\n-  };\n-\n-  ngOnInit(): void {\n-    this.route.paramMap.subscribe(params => {\n-      const id = params.get('id');\n-      if (id) {\n-        this.buildingId = +id;\n-        this.loadBuilding();\n-        this.loadLevels();\n-\n-      }\n-    });\n-  }\n-\n   loadBuilding() {\n     this.api.select('buildings', this.buildingId).subscribe({\n       next: (res) => {\n         this.building = res;\n"
                },
                {
                    "date": 1753452707037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n             ...level,\n             occupancy: Math.floor(level.occupied * 100 / level.rooms)  \n           }));\n \n-        this.dataSource = this.levels;\n+      this.dataSource.data = this.levels;\n       },\n       error: (err) => {\n         console.error('Szintek lekérdezési hiba:', err);\n         this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n"
                },
                {
                    "date": 1753452720974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n import { MatInputModule } from '@angular/material/input';\n import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n import { MatProgressBarModule } from '@angular/material/progress-bar';\n import { SnackbarService } from '../../services/snackbar.service';\n+import { MatPaginator } from '@angular/material/paginator';\n \n @Component({\n   selector: 'app-levels',\n   standalone: true,\n@@ -23,8 +24,9 @@\n })\n \n export class LevelsComponent implements OnInit, AfterViewInit {\n   @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n+  @ViewChild(MatPaginator) paginator!: MatPaginator;\n \n   readonly route = inject(ActivatedRoute);\n   displayedColumns: string[] = ['id', 'preview', 'name', 'rooms', 'details', 'actions'];\n   dataSource = new MatTableDataSource<any>();\n@@ -83,9 +85,9 @@\n             ...level,\n             occupancy: Math.floor(level.occupied * 100 / level.rooms)  \n           }));\n \n-      this.dataSource.data = this.levels;\n+        this.dataSource.data = this.levels;\n       },\n       error: (err) => {\n         console.error('Szintek lekérdezési hiba:', err);\n         this.snackbar.show('Hiba történt a szintek betöltésekor.', 'error');\n"
                },
                {
                    "date": 1753452761085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,14 +12,28 @@\n import { MatInputModule } from '@angular/material/input';\n import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n import { MatProgressBarModule } from '@angular/material/progress-bar';\n import { SnackbarService } from '../../services/snackbar.service';\n-import { MatPaginator } from '@angular/material/paginator';\n+import { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\n \n @Component({\n   selector: 'app-levels',\n   standalone: true,\n-  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule, MatProgressBarModule],\n+  imports: [\n+    CommonModule, \n+    MatButtonModule, \n+    MatExpansionModule, \n+    MatAccordion, \n+    MatTableModule, \n+    MatFormFieldModule, \n+    MatInputModule, \n+    MatIconModule, \n+    MatDialogModule, \n+    FormsModule, \n+    RouterModule, \n+    MatProgressBarModule, \n+    MatPaginatorModule\n+  ],\n   templateUrl: './levels.component.html',\n   styleUrl: './levels.component.scss'\n })\n \n"
                },
                {
                    "date": 1753452936004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,20 +18,20 @@\n @Component({\n   selector: 'app-levels',\n   standalone: true,\n   imports: [\n-    CommonModule, \n-    MatButtonModule, \n-    MatExpansionModule, \n-    MatAccordion, \n-    MatTableModule, \n-    MatFormFieldModule, \n-    MatInputModule, \n-    MatIconModule, \n-    MatDialogModule, \n-    FormsModule, \n-    RouterModule, \n-    MatProgressBarModule, \n+    CommonModule,\n+    MatButtonModule,\n+    MatExpansionModule,\n+    MatAccordion,\n+    MatTableModule,\n+    MatFormFieldModule,\n+    MatInputModule,\n+    MatIconModule,\n+    MatDialogModule,\n+    FormsModule,\n+    RouterModule,\n+    MatProgressBarModule,\n     MatPaginatorModule\n   ],\n   templateUrl: './levels.component.html',\n   styleUrl: './levels.component.scss'\n@@ -74,11 +74,11 @@\n       }\n     });\n   }\n \n-    ngAfterViewInit() {\n-  this.dataSource.paginator = this.paginator;\n-}\n+  ngAfterViewInit() {\n+    this.dataSource.paginator = this.paginator;\n+  }\n \n   loadBuilding() {\n     this.api.select('buildings', this.buildingId).subscribe({\n       next: (res) => {\n@@ -96,9 +96,9 @@\n       next: (res) => {\n         this.levels = (res as any[]).filter(l => l.building_id == this.buildingId)\n           .map(level => ({\n             ...level,\n-            occupancy: Math.floor(level.occupied * 100 / level.rooms)  \n+            occupancy: Math.floor(level.occupied * 100 / level.rooms)\n           }));\n \n         this.dataSource.data = this.levels;\n       },\n"
                },
                {
                    "date": 1753688876704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n import { ImagemodalComponent } from '../imagemodal/imagemodal.component';\n import { MatProgressBarModule } from '@angular/material/progress-bar';\n import { SnackbarService } from '../../services/snackbar.service';\n import { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\n+import { MatSort, MatSortModule } from '@angular/material/sort';\n \n @Component({\n   selector: 'app-levels',\n   standalone: true,\n@@ -30,17 +31,19 @@\n     MatDialogModule,\n     FormsModule,\n     RouterModule,\n     MatProgressBarModule,\n-    MatPaginatorModule\n+    MatPaginatorModule,\n+    MatSortModule\n   ],\n   templateUrl: './levels.component.html',\n   styleUrl: './levels.component.scss'\n })\n \n export class LevelsComponent implements OnInit, AfterViewInit {\n   @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n+  @ViewChild(MatSort) sort!: MatSort;\n \n   readonly route = inject(ActivatedRoute);\n   displayedColumns: string[] = ['id', 'preview', 'name', 'rooms', 'details', 'actions'];\n   dataSource = new MatTableDataSource<any>();\n"
                },
                {
                    "date": 1753688890637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n   }\n \n   ngAfterViewInit() {\n     this.dataSource.paginator = this.paginator;\n+    this.dataSource.sort = this.sort;\n   }\n \n   loadBuilding() {\n     this.api.select('buildings', this.buildingId).subscribe({\n"
                },
                {
                    "date": 1753688930924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n   @ViewChild(MatPaginator) paginator!: MatPaginator;\n   @ViewChild(MatSort) sort!: MatSort;\n \n   readonly route = inject(ActivatedRoute);\n-  displayedColumns: string[] = ['id', 'preview', 'name', 'rooms', 'details', 'actions'];\n+  displayedColumns: string[] = ['id', 'preview', 'name', 'rooms', 'occupancy', 'actions'];\n   dataSource = new MatTableDataSource<any>();\n \n   constructor(\n     private api: ApiService,\n"
                }
            ],
            "date": 1753272593700,
            "name": "Commit-0",
            "content": "import { Component, inject, OnInit, ViewChild } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { MatAccordion, MatExpansionModule, MatExpansionPanel } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\n\n@Component({\n  selector: 'app-levels',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, MatExpansionModule, MatAccordion, MatTableModule, MatFormFieldModule, MatInputModule, MatIconModule, MatDialogModule, FormsModule, RouterModule],\n  templateUrl: './levels.component.html',\n  styleUrl: './levels.component.scss'\n})\n\nexport class LevelsComponent implements OnInit {\n    @ViewChild(MatExpansionPanel) panel!: MatExpansionPanel;\n\n  readonly route = inject(ActivatedRoute);\n  displayedColumns: string[] = ['id', 'name', 'actions'];\n  dataSource: any[] = [];\n  constructor(\n    private api: ApiService\n  ) { }\n\n  buildingId!: number;\n  building: any = '';\n  levels: any[] = [];\n\n  levelForm = {\n  id: null,\n  building_id: 0,\n  name: '',\n  floorplan: null\n};\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.buildingId = +id;\n        this.loadBuilding();\n        this.loadLevels();\n      }\n    });\n  }\n\n  loadBuilding() {\n    this.api.select('buildings', this.buildingId).subscribe({\n      next: (res) => this.building = res,\n      error: (err) => console.error('Épület lekérdezési hiba:', err)\n    });\n  }\n\nloadLevels() {\n  this.api.selectAll('levels').subscribe({\n    next: (res) => {\n      this.levels = (res as any[]).filter(l => l.building_id === this.buildingId);\n      console.log(this.levels)\n      this.dataSource = this.levels;\n    },\n    error: (err) => console.error('Szintek lekérdezési hiba:', err)\n  });\n}\n\nsave() {\n  const { id, name } = this.levelForm;\n\n  if (!name) {\n    alert('A szint neve kötelező!');\n    return;\n  }\n\n  this.levelForm.building_id = this.buildingId;\n\n  if (id) {\n    // MÓDOSÍTÁS\n    this.api.update('levels', id, this.levelForm).subscribe({\n      next: () => {\n        this.loadLevels();\n        this.resetForm();\n      },\n      error: (err) => console.error('Hiba módosításkor:', err)\n    });\n  } else {\n    // LÉTREHOZÁS\n    this.api.insert('levels', this.levelForm).subscribe({\n      next: () => {\n        this.loadLevels();\n        this.resetForm();\n      },\n      error: (err) => console.error('Hiba mentéskor:', err)\n    });\n  }\n}\n\nonEdit(level: any) {\n  this.levelForm = {\n    id: level.id,\n    building_id: level.building_id,\n    name: level.name,\n    floorplan: level.floorplan || null\n  };\n   this.panel.open();\n}\n\nonDelete(level: any) {\n  if (confirm(`Biztosan törlöd a(z) \"${level.name}\" szintet?`)) {\n    this.api.delete('levels', level.id).subscribe({\n      next: () => this.loadLevels(),\n      error: (err) => console.error('Hiba törléskor:', err)\n    });\n  }\n}\n\nresetForm() {\n  this.levelForm = {\n    id: null,\n    building_id: this.buildingId,\n    name: '',\n    floorplan: null\n  };\n}\n\n}\n"
        }
    ]
}